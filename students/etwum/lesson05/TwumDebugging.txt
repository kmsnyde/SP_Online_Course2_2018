what is wrong with our logic? If n isnt divible by 2 the program should end itself instead of keep going

Why doesnt the function stop calling itself? There isnt anything in the code telling the program to stop

What's happening to the value of 'n' as the function gets deeper and deeper into recursion? The initial value of n gets divided by 2 and if 
it isnt a power of 2 then it continues with a value of n which is the initial value divided by 2. The value gets smaller and smaller

Emmanuel@Manny MINGW64 ~/Documents/GitHub/SP_Online_Course2_2018/students/etwum/lesson05 (master)
$ python -m pdb recursive.py 15
> c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py(3)<module>()
-> import sys
(Pdb) n
> c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py(6)<module>()
-> def my_fun(n):
(Pdb) n
> c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py(13)<module>()
-> if __name__ == '__main__':
(Pdb) n
> c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py(14)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py(15)<module>()
-> print(my_fun(n))
(Pdb) n
Traceback (most recent call last):
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\pdb.py", line 1548, in _runscript
    self.run(statement)
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\bdb.py", line 431, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py", line 15, in <module>
    print(my_fun(n))
  File "c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py", line 10, in my_fun
    return my_fun(n/2)
  File "c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py", line 10, in my_fun
    return my_fun(n/2)
  File "c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py", line 10, in my_fun
    return my_fun(n/2)
  [Previous line repeated 980 more times]
  File "c:\users\emmanuel\documents\github\sp_online_course2_2018\students\etwum\lesson05\recursive.py", line 6, in my_fun
    def my_fun(n):
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\bdb.py", line 50, in trace_dispatch
    return self.dispatch_call(frame, arg)
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\bdb.py", line 76, in dispatch_call
    if not (self.stop_here(frame) or self.break_anywhere(frame)):
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\bdb.py", line 173, in break_anywhere
    return self.canonic(frame.f_code.co_filename) in self.breaks
  File "C:\Users\Emmanuel\AppData\Local\Programs\Python\Python36-32\lib\bdb.py", line 29, in canonic
    if filename == "<" + filename[1:-1] + ">":
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> c:\users\emmanuel\appdata\local\programs\python\python36-32\lib\bdb.py(29)canonic()
-> if filename == "<" + filename[1:-1] + ">":
(Pdb) 
